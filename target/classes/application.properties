quarkus.package.type=fast-jar

# ===== Configuration nœud et cluster =====
# Identifiant du nœud local (à modifier sur chaque PC: node1, node2 ou node3)
memorydb.node.id=node1

# Adresse du nœud local (à modifier sur chaque PC avec l'IP correcte)
# Format: IP:PORT
memorydb.node.hostname=192.168.1.101:8080

# Activation du mode cluster
memorydb.cluster.enabled=true

# Liste des adresses de tous les nœuds du cluster
# Cette liste doit être identique sur tous les nœuds
memorydb.cluster.nodes=192.168.1.101:8080,192.168.1.102:8080,192.168.1.103:8080

# Port du serveur HTTP (8080 par défaut, à ajuster si besoin)
quarkus.http.port=8080

# ===== Netty timeouts pour résoudre ReadTimeoutException =====
# Augmenter le timeout de lecture pour les requêtes HTTP
quarkus.http.read-timeout=5m

# Configurer les timeouts Netty
quarkus.vertx.eventloop.worker-pool-size=20
quarkus.http.idle-timeout=300s
quarkus.http.so-timeout=300s
quarkus.thread-pool.max-threads=50
quarkus.vertx.worker-pool-size=50

# Augmenter la taille du buffer pour les requêtes
quarkus.http.body.uploads-directory=uploads
quarkus.http.body.handle-file-uploads=true
quarkus.http.limits.max-body-size=1G

# Configurer le serveur pour les réponses lentes
quarkus.resteasy.async-supported=true
quarkus.http.enable-compression=true

# ===== Configuration distribuée pour optimiser la mémoire =====
# Taille du batch pour le chargement des fichiers Parquet (ajuster selon la RAM disponible)
memorydb.parquet.batch-size=5000

# Nombre de threads pour le chargement parallèle
memorydb.parquet.parallelism=4

# Stratégie de distribution: round-robin
memorydb.distribution.strategy=round-robin

# Logs détaillés de la distribution
memorydb.distribution.verbose-logging=true
